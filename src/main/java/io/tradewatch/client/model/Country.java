/*
 * tradewatch.io
 * Financial market data for Developers
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tradewatch.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The country associated with the symbol (see ISO 3166-1 alpha-2)
 */
@JsonAdapter(Country.Adapter.class)
public enum Country {
  
  FR("fr"),
  
  US("us"),
  
  DE("de"),
  
  NZ("nz"),
  
  NL("nl"),
  
  UK("uk"),
  
  ES("es"),
  
  CN("cn"),
  
  CH("ch"),
  
  GR("gr"),
  
  BE("be"),
  
  PT("pt"),
  
  IT("it"),
  
  ALL("all");

  private String value;

  Country(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Country fromValue(String value) {
    for (Country b : Country.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<Country> {
    @Override
    public void write(final JsonWriter jsonWriter, final Country enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Country read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Country.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    Country.fromValue(value);
  }
}

